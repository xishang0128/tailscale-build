name: unstable build
on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

  push:
    paths-ignore:
      - "README.md"
    branches:
      - main
concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        jobs:
          - { goos: linux, goarch: '386', output: '386' }
          - { goos: linux, goarch: amd64, goamd64: v1, output: amd64-v1 }
          - { goos: linux, goarch: amd64, goamd64: v3, output: amd64-v3 }
          - { goos: linux, goarch: arm64, output: arm64 }
          - { goos: linux, goarch: arm, goarm: '7', output: armv7 }

          - { goos: android, goarch: '386', ndk: i686-linux-android34, output: '386' }
          - { goos: android, goarch: amd64, ndk: x86_64-linux-android34, output: amd64 }
          - { goos: android, goarch: arm, ndk: armv7a-linux-androideabi34, output: armv7 }
          - { goos: android, goarch: arm64, ndk: aarch64-linux-android34, output: arm64 }

    steps:
    - uses: actions/checkout@v4
      with:
        repository: tailscale/tailscale

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: "stable"

    - name: Set Variable
      run: |
        echo "BUILDTIME=$(date)" >> $GITHUB_ENV
        echo "CGO_ENABLED=0" >> $GITHUB_ENV
        echo "BUILDTAG=-extldflags --static" >> $GITHUB_ENV

    - name: Setup NDK
      if: ${{ matrix.jobs.goos == 'android' }}
      uses: nttld/setup-ndk@v1
      id: setup-ndk
      with:
        ndk-version: r29-beta1

    - name: Set NDK path
      if: ${{ matrix.jobs.goos == 'android' }}
      run: |
        echo "CC=${{steps.setup-ndk.outputs.ndk-path}}/toolchains/llvm/prebuilt/linux-x86_64/bin/${{matrix.jobs.ndk}}-clang" >> $GITHUB_ENV
        echo "CGO_ENABLED=1" >> $GITHUB_ENV
        echo "BUILDTAG=" >> $GITHUB_ENV
        echo "TAGS=-tags=ts_omit_aws,ts_omit_bird,ts_omit_tap,ts_omit_kube,ts_omit_completion,ts_omit_ssh,ts_omit_wakeonlan,ts_omit_capture,ts_omit_relayserver,ts_omit_systray,ts_omit_taildrop,ts_omit_tpm,ts_omit_syspolicy,ts_omit_debugeventbus,ts_omit_webclient\"" >> $GITHUB_ENV

    - name: Build core
      env:
        GOOS: ${{matrix.jobs.goos}}
        GOARCH: ${{matrix.jobs.goarch}}
        GOAMD64: ${{matrix.jobs.goamd64}}
        GOARM: ${{matrix.jobs.arm}}
        GOMIPS: ${{matrix.jobs.mips}}
      run: |
        eval `CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go run ./cmd/mkversion`
        curl https://raw.githubusercontent.com/xishang0128/tailscale-build/main/.github/patch/tsaddr.diff | patch -p2
        go build ${TAGS} -v -trimpath -ldflags "${BUILDTAG} -X tailscale.com/version.longStamp=${VERSION_LONG} -X tailscale.com/version.shortStamp=${VERSION_SHORT} -w -s -buildid=" ./cmd/tailscaled
        mv tailscaled tailscaled-${{ matrix.jobs.goos }}-${{ matrix.jobs.output }}
        go build ${TAGS} -v -trimpath -ldflags "${BUILDTAG} -X tailscale.com/version.longStamp=${VERSION_LONG} -X tailscale.com/version.shortStamp=${VERSION_SHORT} -w -s -buildid=" ./cmd/tailscale
        mv tailscale tailscale-${{ matrix.jobs.goos }}-${{ matrix.jobs.output }}

    - name: Archive production artifacts
      uses: actions/upload-artifact@v4
      with:
        name: "${{ matrix.jobs.goos }}-${{ matrix.jobs.output }}"
        path: |
          tailscaled-${{ matrix.jobs.goos }}-${{ matrix.jobs.output }}
          tailscale-${{ matrix.jobs.goos }}-${{ matrix.jobs.output }}

  Upload-Prerelease:
    permissions: write-all
    if: ${{ github.event_name != 'workflow_dispatch' && github.ref_type == 'branch' && !startsWith(github.event_name, 'pull_request') }}
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - name: Download all workflow run artifacts
      uses: actions/download-artifact@v4
      with:
        path: bin/
        merge-multiple: true

    - name: Delete current release assets
      uses: 8Mi-Tech/delete-release-assets-action@main
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        tag: unstable
        deleteOnlyFromDrafts: false

    - run: |
        echo "BUILDTIME=$(TZ=Asia/Shanghai date)" >> $GITHUB_ENV
      shell: bash

    - name: Set Env
      run: |
        cat > release.txt << 'EOF'
        Release created at ${{ env.BUILDTIME }}
        EOF
      shell: bash

    - name: Tag Repo
      uses: richardsimko/update-tag@v1
      with:
        tag_name: unstable
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Prerelease
      uses: softprops/action-gh-release@v1
      if: ${{  success() }}
      with:
        tag_name: unstable
        files: |
          bin/*
        prerelease: true
        generate_release_notes: true
        body_path: release.txt
